{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\denis\\\\OneDrive - Sofia University\\\\Desktop\\\\instant-messages-search\\\\instant-messages-search\\\\client\\\\src\\\\components\\\\ChannelMessages\\\\ChannelMessages.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport MessageBox from \"../MessageBox\";\nimport { useRefManager } from \"../RefMessagesManager\";\nimport SearchInput from \"../SearchInput\";\nimport \"./ChannelMessages.css\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ChannelMessages = () => {\n  _s();\n  const [searchQuery, setSearchQuery] = useState(\"\"); // for what we are typing\n  const [confirmedQuery, setConfirmedQuery] = useState(\"\"); // for what we are searching\n  const [messages, setMessages] = useState([]); // for messages from server\n  const [showSearchPanel, setShowSearchPanel] = useState(false);\n  useEffect(() => {\n    fetch(\"http://localhost:3001/messages\").then(response => response.json()).then(data => setMessages(data)).catch(error => console.error(error));\n  }, []);\n  const handleSearch = () => {\n    setConfirmedQuery(searchQuery);\n  };\n  const filteredMessages = confirmedQuery === \"\" ? [] : messages.filter(msg => msg.content.toLowerCase().includes(confirmedQuery.toLowerCase()));\n  const {\n    getTarget\n  } = useRefManager();\n  const scrollToMessage = id => {\n    const target = getTarget(\"message\", id);\n    if (target) {\n      target.scrollIntoView({\n        behavior: \"smooth\",\n        block: \"center\"\n      });\n      target.classList.add(\"message-click\");\n      setTimeout(() => {\n        target.classList.remove(\"message-click\");\n        target.classList.add(\"message-after-click\");\n      }, 5000);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"channel-messages-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-panel\",\n      children: showSearchPanel ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Search\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(SearchInput, {\n          searchQuery: searchQuery,\n          onSearchChange: setSearchQuery\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleSearch,\n          children: \"Find\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(MessageBox, {\n          id: \"search\",\n          messages: filteredMessages,\n          onMessageClick: scrollToMessage,\n          highlightedWord: confirmedQuery\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true) : null\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"messages-panel\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Messages\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(MessageBox, {\n        id: \"message\",\n        messages: messages\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n};\n_s(ChannelMessages, \"sRbs4HecTVIHfujzqjfn186SRpc=\", false, function () {\n  return [useRefManager];\n});\n_c = ChannelMessages;\nexport default ChannelMessages;\nvar _c;\n$RefreshReg$(_c, \"ChannelMessages\");","map":{"version":3,"names":["React","useEffect","useState","MessageBox","useRefManager","SearchInput","jsxDEV","_jsxDEV","Fragment","_Fragment","ChannelMessages","_s","searchQuery","setSearchQuery","confirmedQuery","setConfirmedQuery","messages","setMessages","showSearchPanel","setShowSearchPanel","fetch","then","response","json","data","catch","error","console","handleSearch","filteredMessages","filter","msg","content","toLowerCase","includes","getTarget","scrollToMessage","id","target","scrollIntoView","behavior","block","classList","add","setTimeout","remove","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSearchChange","onClick","onMessageClick","highlightedWord","_c","$RefreshReg$"],"sources":["C:/Users/denis/OneDrive - Sofia University/Desktop/instant-messages-search/instant-messages-search/client/src/components/ChannelMessages/ChannelMessages.tsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\"\r\nimport MessageBox from \"../MessageBox\"\r\nimport { useRefManager } from \"../RefMessagesManager\"\r\nimport SearchInput from \"../SearchInput\"\r\nimport \"./ChannelMessages.css\"\r\nimport { Message } from \"../../../../server/messages\"\r\n\r\nconst ChannelMessages = () => {\r\n    const [searchQuery, setSearchQuery] = useState(\"\") // for what we are typing\r\n    const [confirmedQuery, setConfirmedQuery] = useState(\"\") // for what we are searching\r\n    const [messages, setMessages] = useState<Message[]>([]) // for messages from server\r\n    const [showSearchPanel, setShowSearchPanel] = useState(false);\r\n\r\n    useEffect(() => {\r\n        fetch(\"http://localhost:3001/messages\")\r\n        .then(response => response.json())\r\n        .then(data => setMessages(data))\r\n        .catch(error => console.error(error))\r\n    }, [])\r\n\r\n\r\n    const handleSearch = () => {\r\n        setConfirmedQuery(searchQuery)\r\n    }\r\n\r\n    const filteredMessages = confirmedQuery === \"\" ? [] : messages.filter((msg) =>\r\n        msg.content.toLowerCase().includes(confirmedQuery.toLowerCase()))\r\n\r\n    const { getTarget } = useRefManager()\r\n    const scrollToMessage = (id: number) => {\r\n        const target = getTarget(\"message\", id)\r\n\r\n        if (target) {\r\n            target.scrollIntoView({ behavior: \"smooth\", block: \"center\" });\r\n            target.classList.add(\"message-click\")\r\n            setTimeout(() => {\r\n                target.classList.remove(\"message-click\")\r\n                target.classList.add(\"message-after-click\")}, 5000)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"channel-messages-container\">\r\n            <div className=\"search-panel\">\r\n            {showSearchPanel ? (\r\n                <>\r\n                <h2>Search</h2>\r\n                <SearchInput searchQuery={searchQuery} onSearchChange={setSearchQuery} />\r\n                <button onClick={handleSearch}>Find</button>\r\n                <MessageBox id=\"search\" messages={filteredMessages} onMessageClick={scrollToMessage} highlightedWord={confirmedQuery}/>\r\n                </>\r\n            ) : null}\r\n            </div>\r\n\r\n            <div className=\"messages-panel\">\r\n                <h2>Messages</h2>\r\n                <MessageBox id=\"message\" messages={messages}/>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default ChannelMessages;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}